// Input: a connected graph G with no marks and integer edge labels
// Output: G with blue edges that induce a minimum spanning tree of G
//   Nodes of G are red. There is an unmarked root with label 1 and an
//   outgoing red edge to a node of G

Main = Preprocess; Loop!
Loop = if one_tree then break else Body
Body = TreesLoop!; MergeTrees; Rewind!
TreesLoop = root_current; TraverseTree; MarkForDeletion; CleanUp; try next_tree else break
TraverseTree = ColourBlue; FindEdge
CleanUp = ColourRed; unroot_red!

MarkForDeletion = try clean else Mark; unroot_red
Mark = if red_loop then skip else add_loop

ColourBlue = blue_init; BlueLoop!
BlueLoop = blue_forward!; try blue_back else break

Rewind = try remove_mid else RemoveEnd
RemoveEnd = try {remove_top, remove_bottom} else keep

ColourRed = red_init; RedLoop!
RedLoop = red_forward!; try red_back else break

MergeTrees = merge_init; MergeLoop!; MergeClean!; unroot_red
MergeLoop = MergeTree!; try next_root else break
MergeTree = down!; add_edge!; try up else break
MergeClean = try ColourRed; try previous_root else break
PreviousRoot = {previous_root1, previous_root2}

Preprocess = pre_init; PreLoop!; unroot_red
PreLoop = PreForward!; try pre_back else break
PreForward = {pre_forward1, pre_forward2}

FindEdge = find_init; create_flag; FindLoop!; destroy_flag
FindLoop = find_forward!; if flag then Minimise! else (try MinSetup); try find_back else break
MinSetup = try min_init2 then Success else (try min_init1 then Success )
Success = Single!; set_flag
Minimise = try Existing else New
Single = {min1, min3, min5, min7}
Existing = {min3, min4, min7, min8}
New = {min1, min2, min5, min6}


blue_init (x:list)
[
	(n0(R), x#red<415.6249084472656, 337.5>)
	|
]
=>
[
	(n0(R), x#blue<415.6249084472656, 337.5>)
	|
]
interface = 
{
n0
}

blue_forward (a,x,y:list)
[
	(n0(R), x#blue<220.98211669921875, 353.5714111328125>)
	(n1, y#red<437.9464111328125, 355.35711669921875>)
	|
	(e0(B), n0, n1, a#blue)
]
=>
[
	(n0, x#blue<220.98211669921875, 353.5714111328125>)
	(n1(R), y#blue<437.9464111328125, 355.35711669921875>)
	|
	(e0(B), n0, n1, a#dashed)
]
interface = 
{
n0, n1
}

blue_back (a,x,y:list)
[
	(n0, x#blue<220.98211669921875, 353.5714111328125>)
	(n1(R), y#blue<437.9464111328125, 355.35711669921875>)
	|
	(e0(B), n0, n1, a#dashed)
]
=>
[
	(n0(R), x#blue<220.98211669921875, 353.5714111328125>)
	(n1, y#blue<437.9464111328125, 355.35711669921875>)
	|
	(e0(B), n0, n1, a#blue)
]
interface = 
{
n0, n1
}

root_current(x,y:list)
[
	(n0, x#red<158.77017211914062, 346.7741394042969>)
	(n1(R), y<314.39794921875, 350.6488952636719>)
	|
	(e0, n1, n0, empty#red)
]
=>
[
	(n0(R), x#red<158.77017211914062, 346.7741394042969>)
	(n1(R), y<314.39794921875, 350.6488952636719>)
	|
	(e0, n1, n0, empty#red)
]
interface = 
{
n0, n1
}


one_tree ()
[
	(n1(R), 1<268.468017578125, 348.09722900390625>)
	|
]
=>
[
	(n1(R), 1<268.468017578125, 348.09722900390625>)
	|
]
interface = 
{
n1
}

next_tree (x,y,z:list)
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<455.1756896972656, 341.3163146972656>)
	(n2(R), z<403.1351318359375, 459.9686279296875>)
	|
	(e1, n2, n0, empty#red)
	(e0, n0, n1, empty#red)
]
=>
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<455.1756896972656, 341.3163146972656>)
	(n2(R), z<403.1351318359375, 459.9686279296875>)
	|
	(e2, n2, n1, empty#red)
	(e0, n0, n1, empty#red)
]
interface = 
{
n0, n1, n2
}

unroot_red (x:list)
[
	(n0(R), x#red<78.97554779052734, 346.774169921875>)
	|
]
=>
[
	(n0, x#red<78.97554779052734, 346.774169921875>)
	|
]
interface = 
{
n0
}


merge_init (x,y:list)
[
	(n0(R), x<101.29086303710938, 278.9638671875>)
	(n1, y#red<224.7567596435547, 276.3303527832031>)
	|
	(e0, n0, n1, empty#red)
]
=>
[
	(n0(R), x<101.29086303710938, 278.9638671875>)
	(n1(R), y#grey<224.7567596435547, 276.3303527832031>)
	|
	(e0, n0, n1, empty#red)
]
interface = 
{
n0, n1
}

previous_root (x,y:list)
[
	(n0(R), x#red<100.0772933959961, 282.93548583984375>)
	(n1, y#any<228.78775024414062, 280.30194091796875>)
	|
	(e0, n0, n1, empty#red)
]
=>
[
	(n0, x#red<100.0772933959961, 282.93548583984375>)
	(n1(R), y#any<228.78775024414062, 280.30194091796875>)
	|
	(e0, n0, n1, empty#red)
]
interface = 
{
n0, n1
}


up (a,x,y:list)
[
	(n1(R), y#grey<222.10899353027344, 278.3161315917969>)
	(n0, x#grey<106.13127899169922, 281.9012145996094>)
	|
	(e0(B), n0, n1, a#dashed)
]
=>
[
	(n1, y#grey<222.10899353027344, 278.3161315917969>)
	(n0(R), x#grey<106.13127899169922, 281.9012145996094>)
	|
	(e0(B), n0, n1, a#blue)
]
interface = 
{
n0, n1
}

down (a,x,y:list)
[
	(n0(R), x#grey<100.79440307617188, 278.9638671875>)
	(n1, y#red<222.10899353027344, 278.3161315917969>)
	|
	(e0(B), n0, n1, a#blue)
]
=>
[
	(n0, x#grey<100.79440307617188, 278.9638671875>)
	(n1(R), y#grey<222.10899353027344, 278.3161315917969>)
	|
	(e0(B), n0, n1, a#dashed)
]
interface = 
{
n0, n1
}

add_edge (a,x,y:list)
[
	(n0(R), x#grey<101.29086303710938, 278.9638671875>)
	(n1, y#red<221.3643035888672, 279.060791015625>)
	|
	(e0(B), n0, n1, a#green)
]
=>
[
	(n0(R), x#grey<101.29086303710938, 278.9638671875>)
	(n1, y#red<221.3643035888672, 279.060791015625>)
	|
	(e0(B), n0, n1, a#blue)
]
interface = 
{
n0, n1
}

next_root (x,y:list)
[
	(n1(R), y#grey<222.77098083496094, 278.3175354003906>)
	(n0, x#red<101.9527816772461, 279.3362121582031>)
	|
	(e0, n0, n1, empty#red)
]
=>
[
	(n1, y#grey<222.77098083496094, 278.3175354003906>)
	(n0(R), x#grey<101.9527816772461, 279.3362121582031>)
	|
	(e0, n0, n1, empty#red)
]
interface = 
{
n0, n1
}

find_back (a,x,y:list)
[
	(n0, x#grey<412.8289489746094, -183.38818359375>)
	(n1(R), y#grey<535.1630249023438, -181.64279174804688>)
	|
	(e0(B), n0, n1, a#dashed)
]
=>
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1, y#grey<535.1630249023438, -181.64279174804688>)
	|
	(e0(B), n0, n1, a#blue)
]
interface = 
{
n0, n1
}


min2 (i,j:int; x,y,z,t:list)
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	(n2, z#grey<419.4849853515625, -59.51898193359375>)
	(n3(R), t#red<527.729248046875, -55.818359375>)
	|
	(e1(B), n2, n3, j#green)
	(e0(B), n0, n1, i)
]
=>
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	(n2, z#grey<419.4849853515625, -59.51898193359375>)
	(n3, t#red<527.729248046875, -55.818359375>)
	|
	(e1(B), n2, n3, j)
	(e0(B), n0, n1, i#green)
]
interface = 
{
n0, n1, n2, n3
}
where i<j


flag ()
[
	(n0(R), 1#green<378.316650390625, 342.9546203613281>)
	|
]
=>
[
	(n0(R), 1#green<378.316650390625, 342.9546203613281>)
	|
]
interface = 
{
n0
}

min4 (i,j:int; x,y,z,t:list)
[
	(n3(R), t#red<527.729248046875, -55.818359375>)
	(n2, z#grey<419.4849853515625, -59.51898193359375>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i#green)
	(e1(B), n2, n3, j#green)
]
=>
[
	(n3, t#red<527.729248046875, -55.818359375>)
	(n2, z#grey<419.4849853515625, -59.51898193359375>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i:0#green)
	(e1(B), n2, n3, j)
]
interface = 
{
n0, n1, n2, n3
}
where i<=j


min3 (i,j:int; x,y,z:list)
[
	(n2(R), z#red<525.87890625, -71.546142578125>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i#green)
	(e1(B), n0, n2, j#green)
]
=>
[
	(n2, z#red<525.87890625, -71.546142578125>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i:0#green)
	(e1(B), n0, n2, j)
]
interface = 
{
n0, n1, n2
}
where i<=j


find_init (x:list)
[
	(n0(R), x#blue<412.8289489746094, -183.38818359375>)
	|
]
=>
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
]
interface = 
{
n0
}


create_flag ()
[
	|
]
=>
[
	(n0(R), 0#green<365.2915954589844, 383.3599853515625>)
	|
]
interface = 
{

}

min7 (i,j:int; x,y,z:list)
[
	(n2(R), z#red<525.87890625, -71.546142578125>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i#green)
	(e1(B), n0, n2, j:0#green)
]
=>
[
	(n2, z#red<525.87890625, -71.546142578125>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i:0#green)
	(e1(B), n0, n2, j#green)
]
interface = 
{
n0, n1, n2
}
where i<j


min6 (i,j:int; x,y,z,t:list)
[
	(n3(R), t#red<527.729248046875, -55.818359375>)
	(n2, z#grey<419.4849853515625, -59.51898193359375>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i)
	(e1(B), n2, n3, j:0#green)
]
=>
[
	(n3, t#red<527.729248046875, -55.818359375>)
	(n2, z#grey<419.4849853515625, -59.51898193359375>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i#green)
	(e1(B), n2, n3, j#green)
]
interface = 
{
n0, n1, n2, n3
}
where i<j


min8 (i,j:int; x,y,z,t:list)
[
	(n3(R), t#red<528.2257080078125, -55.3218994140625>)
	(n2, z#grey<419.4849853515625, -59.51898193359375>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i#green)
	(e1(B), n2, n3, j:0#green)
]
=>
[
	(n3, t#red<528.2257080078125, -55.3218994140625>)
	(n2, z#grey<419.4849853515625, -59.51898193359375>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i:0#green)
	(e1(B), n2, n3, j#green)
]
interface = 
{
n0, n1, n2, n3
}
where i<j


min1 (i,j:int; x,y,z:list)
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	(n2(R), z#red<525.87890625, -71.546142578125>)
	|
	(e1(B), n0, n2, j#green)
	(e0(B), n0, n1, i)
]
=>
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	(n2, z#red<525.87890625, -71.546142578125>)
	|
	(e1(B), n0, n2, j)
	(e0(B), n0, n1, i#green)
]
interface = 
{
n0, n1, n2
}
where i<j


min5 (i,j:int; x,y,z:list)
[
	(n2(R), z#red<525.87890625, -71.546142578125>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i)
	(e1(B), n0, n2, j:0#green)
]
=>
[
	(n2, z#red<525.87890625, -71.546142578125>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	|
	(e0(B), n0, n1, i#green)
	(e1(B), n0, n2, j#green)
]
interface = 
{
n0, n1, n2
}
where i<j


find_forward (a,x,y:list)
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1, y#blue<535.1630249023438, -181.64279174804688>)
	|
	(e0(B), n0, n1, a#blue)
]
=>
[
	(n0, x#grey<412.8289489746094, -183.38818359375>)
	(n1(R), y#grey<535.1630249023438, -181.64279174804688>)
	|
	(e0(B), n0, n1, a#dashed)
]
interface = 
{
n0, n1
}


destroy_flag (x:list)
[
	(n0(R), 1#green<378.316650390625, 342.9546203613281>)
	|
]
=>
[
	|
]
interface = 
{

}

min_init1 (a,x,y:list)
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	|
	(e0(B), n0, n1, a)
]
=>
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	|
	(e0(B), n0, n1, a#green)
]
interface = 
{
n0, n1
}


set_flag ()
[
	(n0(R), 0#green<378.316650390625, 342.9546203613281>)
	|
]
=>
[
	(n0(R), 1#green<378.316650390625, 342.9546203613281>)
	|
]
interface = 
{
n0
}

min_init2 (i:int; x,y:list)
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1, y#red<535.1630249023438, -181.64279174804688>)
	|
	(e0(B), n0, n1, i#green)
]
=>
[
	(n0(R), x#grey<412.8289489746094, -183.38818359375>)
	(n1(R), y#red<535.1630249023438, -181.64279174804688>)
	|
	(e0(B), n0, n1, i:0#green)
]
interface = 
{
n0, n1
}


red_forward (a,x,y:list)
[
	(n0(R), x#red<220.98211669921875, 353.5714111328125>)
	(n1, y#grey<437.9464111328125, 355.35711669921875>)
	|
	(e0(B), n0, n1, a#blue)
]
=>
[
	(n0, x#red<220.98211669921875, 353.5714111328125>)
	(n1(R), y#red<437.9464111328125, 355.35711669921875>)
	|
	(e0(B), n0, n1, a#dashed)
]
interface = 
{
n0, n1
}

red_back (a,x,y:list)
[
	(n0, x#red<220.98211669921875, 353.5714111328125>)
	(n1(R), y#red<438.60833740234375, 354.6951904296875>)
	|
	(e0(B), n0, n1, a#dashed)
]
=>
[
	(n0(R), x#red<220.98211669921875, 353.5714111328125>)
	(n1, y#red<438.60833740234375, 354.6951904296875>)
	|
	(e0(B), n0, n1, a#blue)
]
interface = 
{
n0, n1
}

red_init (x:list)
[
	(n0(R), x#grey<415.6249084472656, 337.5>)
	|
]
=>
[
	(n0(R), x#red<415.6249084472656, 337.5>)
	|
]
interface = 
{
n0
}

pre_forward2 (i:int; a,x,y,z:list)
[
	(n3, z#red<77.21930694580078, 482.390380859375>)
	(n2(R), i<245.6291046142578, 484.0914611816406>)
	(n1, y<248.6454315185547, 346.774169921875>)
	(n0(R), x#red<78.97554779052734, 346.774169921875>)
	|
	(e0(B), n0, n1, a)
	(e1, n2, n3, empty#red)
]
=>
[
	(n3, z#red<77.21930694580078, 482.390380859375>)
	(n2(R), i+1<245.6291046142578, 484.0914611816406>)
	(n1(R), y#red<248.6454315185547, 346.774169921875>)
	(n0, x#red<78.97554779052734, 346.774169921875>)
	|
	(e0(B), n0, n1, a#dashed)
	(e3, n1, n3, empty#red)
	(e2, n2, n1, empty#red)
]
interface = 
{
n0, n1, n2, n3
}


pre_back (a,x,y:list)
[
	(n0, x#red<78.97554779052734, 346.774169921875>)
	(n1(R), y#red<249.4959716796875, 346.774169921875>)
	|
	(e0(B), n0, n1, a#dashed)
]
=>
[
	(n0(R), x#red<78.97554779052734, 346.774169921875>)
	(n1, y#red<249.4959716796875, 346.774169921875>)
	|
	(e0(B), n0, n1, a)
]
interface = 
{
n0, n1
}


pre_init (x:list)
[
	(n0, x<247.47982788085938, 325.7200622558594>)
	|
]
=>
[
	(n0(R), x#red<247.47982788085938, 325.7200622558594>)
	(n1(R), 1<384.1434326171875, 326.51837158203125>)
	|
	(e0, n1, n0, empty#red)
]
interface = 
{
n0
}


pre_forward1 (i:int; a,x,y:list)
[
	(n2(R), i<166.52752685546875, 486.64312744140625>)
	(n1, y<248.6454315185547, 346.774169921875>)
	(n0(R), x#red<78.97554779052734, 346.774169921875>)
	|
	(e0(B), n0, n1, a)
	(e1, n2, n0, empty#red)
]
=>
[
	(n2(R), i+1<166.52752685546875, 486.64312744140625>)
	(n1(R), y#red<248.6454315185547, 346.774169921875>)
	(n0, x#red<78.97554779052734, 346.774169921875>)
	|
	(e0(B), n0, n1, a#dashed)
	(e3, n1, n0, empty#red)
	(e2, n2, n1, empty#red)
]
interface = 
{
n0, n1, n2
}


clean (i:int; x,y:list)
[
	(n0, x#grey<337.7136535644531, 344.2413024902344>)
	(n1(R), y#red<428.7815856933594, 343.623779296875>)
	|
	(e0(B), n0, n1, i:0#green)
]
=>
[
	(n0, x#grey<337.7136535644531, 344.2413024902344>)
	(n1(R), y#red<428.7815856933594, 343.623779296875>)
	|
	(e0(B), n0, n1, i#green)
]
interface = 
{
n0, n1
}


add_loop (x:list)
[
	(n0(R), x#grey<337.21722412109375, 343.7448425292969>)
	|
]
=>
[
	(n0(R), x#grey<337.21722412109375, 343.7448425292969>)
	|
	(e1, n0, n0, empty#red)
]
interface = 
{
n0
}


red_loop (x:list)
[
	(n0(R), x#grey<337.21722412109375, 343.7448425292969>)
	|
	(e0, n0, n0, empty#red)
]
=>
[
	(n0(R), x#grey<337.21722412109375, 343.7448425292969>)
	|
	(e0, n0, n0, empty#red)
]
interface = 
{
n0
}

keep (i:int; x,y:list)
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<495.08868408203125, 346.8403625488281>)
	(n2(R), i<409.298583984375, 489.2342529296875>)
	|
	(e0, n2, n1, empty#red)
	(e1, n0, n1, empty#red)
]
=>
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<495.08868408203125, 346.8403625488281>)
	(n2(R), i<409.298583984375, 489.2342529296875>)
	|
	(e3, n2, n0, empty#red)
	(e1, n0, n1, empty#red)
]
interface = 
{
n0, n1, n2
}

remove_bottom (i:int; x,y:list)
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<495.08868408203125, 346.8403625488281>)
	(n2(R), i<409.298583984375, 489.2342529296875>)
	|
	(e0, n2, n1, empty#red)
	(e2, n1, n1, empty#red)
	(e1, n0, n1, empty#red)
]
=>
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<495.08868408203125, 346.8403625488281>)
	(n2(R), i-1<409.298583984375, 489.2342529296875>)
	|
	(e3, n2, n0, empty#red)
]
interface = 
{
n0, n1, n2
}


remove_top (i:int; x,y:list)
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<495.08868408203125, 346.8403625488281>)
	(n2(R), i<409.298583984375, 489.2342529296875>)
	|
	(e0, n2, n0, empty#red)
	(e1, n0, n1, empty#red)
	(e2, n0, n0, empty#red)
]
=>
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<495.08868408203125, 346.8403625488281>)
	(n2(R), i-1<409.298583984375, 489.2342529296875>)
	|
	(e3, n2, n1, empty#red)
]
interface = 
{
n0, n1, n2
}


remove_mid (i:int; x,y,z:list)
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<495.08868408203125, 346.8403625488281>)
	(n2(R), i<409.298583984375, 489.2342529296875>)
	(n3, z#red<569.381103515625, 485.6965026855469>)
	|
	(e0, n2, n1, empty#red)
	(e2, n1, n3, empty#red)
	(e3, n1, n1, empty#red)
	(e1, n0, n1, empty#red)
]
=>
[
	(n0, x#red<337.21722412109375, 343.7448425292969>)
	(n1, y#red<495.08868408203125, 346.8403625488281>)
	(n2(R), i-1<409.298583984375, 489.2342529296875>)
	(n3, z#red<569.381103515625, 485.6965026855469>)
	|
	(e4, n2, n0, empty#red)
	(e5, n0, n3, empty#red)
]
interface = 
{
n0, n1, n2, n3
}
